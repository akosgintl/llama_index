[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
    "poetry-core",
]

[tool.codespell]
check-filenames = true
check-hidden = true
ignore-words-list = "astroid,gallary,momento,narl,ot,rouge"
skip = "./llama_index/core/_static,./examples,./experimental,*.csv,*.html,*.json,*.jsonl,*.pdf,*.txt,*.ipynb"

[tool.mypy]
disallow_untyped_defs = true
exclude = [
    "_static",
    "build",
    "examples",
    "notebooks",
    "venv",
]
explicit_package_bases = true
ignore_missing_imports = true
namespace_packages = true
plugins = "pydantic.mypy"
python_version = "3.10"

[tool.poetry]
authors = [
    "Jerry Liu <jerry@llamaindex.ai>",
]
classifiers = [
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
description = "Interface between LLMs and your data"
documentation = "https://docs.llamaindex.ai/en/stable/"
exclude = [
    "**/BUILD",
]
homepage = "https://llamaindex.ai"
include = [
    "llama_index/core/_static/nltk_cache/corpora/stopwords/*",
    "llama_index/core/_static/nltk_cache/tokenizers/punkt_tab/*",
    "llama_index/core/_static/tiktoken_cache/*",
]
keywords = [
    "LLM",
    "NLP",
    "RAG",
    "data",
    "devtools",
    "index",
    "retrieval",
]
license = "MIT"
maintainers = [
    "Andrei Fajardo <andrei@runllama.ai>",
    "Haotian Zhang <ht@runllama.ai>",
    "Jerry Liu <jerry@llamaindex.ai>",
    "Logan Markewich <logan@llamaindex.ai>",
    "Simon Suo <simon@llamaindex.ai>",
    "Sourabh Desai <sourabh@llamaindex.ai>",
]
name = "llama-index-core"
packages = [
    {include = "llama_index"},
]
readme = "README.md"
repository = "https://github.com/run-llama/llama_index"
source = [
    {name = "nvidia-pypi", priority = "supplemental", url = "https://pypi.nvidia.com"},
]
version = "0.12.28"

[tool.poetry.dependencies]
dataclasses-json = "*"
deprecated = ">=1.2.9.3"
fsspec = ">=2023.5.0"
httpx = "*"
nest-asyncio = "^1.5.8"
nltk = ">3.8.1"
numpy = "*"
python = ">=3.9,<4.0"
tenacity = ">=8.2.0,!=8.4.0,<10.0.0"
tiktoken = ">=0.3.3"
typing-extensions = ">=4.5.0"
typing-inspect = ">=0.8.0"
requests = ">=2.31.0"
aiohttp = "^3.8.6"
networkx = ">=3.0"
dirtyjson = "^1.0.8"
tqdm = "^4.66.1"
pillow = ">=9.0.0"
PyYAML = ">=6.0.1"
wrapt = "*"
pydantic = ">=2.8.0"
filetype = "^1.2.0"
banks = "^2.0.0"

[tool.poetry.dependencies.SQLAlchemy]
extras = [
    "asyncio",
]
version = ">=1.4.49"

[tool.poetry.dependencies.eval-type-backport]
python = "<3.10"
version = "^0.2.0"

[tool.poetry.group.dev.dependencies]
boto3 = "1.33.6"
botocore = ">=1.33.13"
docker = "^7.0.0"
ipython = "8.10.0"
jupyter = "^1.0.0"
llama-cloud = ">=0.0.6"
motor = "^3.3.2"
mypy = "1.11.0"
openai = "*"
pandas = "*"
platformdirs = "*"
pre-commit = "3.2.0"
pylint = "2.15.10"
pypdf = "*"
pytest = "^7.2"
pytest-asyncio = "0.21.0"
pytest-cov = "^5.0"
pytest-dotenv = "0.5.2"
pytest-mock = "3.11.1"
pytest_asyncio = "*"
rake-nltk = "1.0.6"
ruff = "0.0.292"
types-Deprecated = ">=0.1.0"
types-PyYAML = "^6.0.12.12"
types-protobuf = "^4.24.0.4"
types-redis = "4.5.5.0"
types-requests = ">=2.28.11.8"
types-setuptools = "67.1.0.0"
vellum-ai = "^0.7.8"

[tool.poetry.group.dev.dependencies.black]
extras = [
    "jupyter",
]
version = ">=23.7.0,<=24.3.0"

[tool.poetry.group.dev.dependencies.codespell]
extras = [
    "toml",
]
version = ">=v2.2.6"

[tool.poetry.group.dev.dependencies.tree-sitter]
python = "<3.12"
version = "0.20.0"

[tool.poetry.group.dev.dependencies.tree-sitter-languages]
python = "<3.12"
version = "1.9.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
autodoc-pydantic = "<=1.9.0"
docutils = "<0.17"
furo = ">=2023.3.27"
m2r2 = "0.3.2"
myst-nb = "0.17.2"
myst-parser = "0.18.1"
pydantic = ">=2.8.0"
sphinx = ">=4.3.0"
sphinx-autobuild = "^2021.3.14"
sphinx-automodapi = "^0.16.0"
sphinx-reredirects = "^0.1.3"
sphinx-rtd-theme = "^1.3.0"
sphinxcontrib-gtagjs = "^0.2.1"

[tool.ruff]
exclude = [
    "notebooks",
]
ignore = [
    "COM812",
    "D213",
    "D417",
    "F541",
    "TCH002",
    "UP006",
    "UP007",
]
select = [
    "ANN204",
    "B009",
    "B010",
    "B011",
    "B013",
    "B014",
    "C4",
    "COM812",
    "COM819",
    "D201",
    "D202",
    "D203",
    "D204",
    "D207",
    "D208",
    "D209",
    "D211",
    "D213",
    "D214",
    "D215",
    "D3",
    "D4",
    "E7",
    "EXE004",
    "F401",
    "F504",
    "F541",
    "F632",
    "FLY",
    "G010",
    "I002",
    "PERF1",
    "PIE790",
    "PIE794",
    "PIE808",
    "PIE810",
    "PLC0414",
    "PLE2510",
    "PLE2512",
    "PLE2513",
    "PLE2514",
    "PLE2515",
    "PLR1701",
    "PLR1711",
    "PT001",
    "PT003",
    "PT006",
    "PT02",
    "PTH201",
    "PYI",
    "Q",
    "RET501",
    "RET502",
    "RET503",
    "RET504",
    "RSE",
    "RUF005",
    "RUF010",
    "RUF015",
    "RUF1",
    "SIM101",
    "SIM103",
    "SIM109",
    "SIM118",
    "SIM2",
    "SIM300",
    "SIM9",
    "TCH005",
    "TD006",
    "TID",
    "TRY201",
    "UP",
    "W",
]
target-version = "py38"
unfixable = [
    "ERA001",
]

[tool.ruff.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.tomlsort]
all = true
in_place = true
spaces_before_inline_comment = 2
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tomlsort.overrides."tool.poetry.dependencies"]
table_keys = false
